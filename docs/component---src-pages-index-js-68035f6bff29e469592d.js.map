{"version":3,"sources":["webpack:///./src/components/flag.js","webpack:///./src/components/flags.js","webpack:///./src/pages/index.js"],"names":["Flag","renderIcon","flagSuffix","value","this","props","indexOf","toLowerCase","className","render","onSelect","selectedLanguages","checked","has","size","role","onClick","Component","Flags","langs","sort","unshift","map","k","key","VAR_PATTERN","TEXT_PATTERN","IndexPage","state","clear","delete","add","setState","searchText","renderResults","results","showAlert","cards","forEach","v","trim","push","navigator","clipboard","writeText","setTimeout","renderSelector","variables","selectedVariable","options","a","required","onChange","event","target","Set","inputText","search","assets","i","length","includes","match","exec","toUpperCase","currentLanguage","line","startsWith","substring","text","replace","componentDidMount","_isMounted","fetch","withPrefix","then","r","split","name","url","window","location","href","RegExp","decodeURIComponent","getParameterByName","onpopstate","htmlFor","id","type","placeholder","e"],"mappings":"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","file":"component---src-pages-index-js-68035f6bff29e469592d.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Flag extends Component {\r\n  renderIcon() {\r\n    const { value } = this.props\r\n    const lowerCaseSuffix = ['JP', 'FR', 'RU', 'PT', 'ES', 'IT', 'DE']\r\n    let flagSuffix\r\n    if (lowerCaseSuffix.indexOf(value) >= 0) {\r\n      flagSuffix = value.toLowerCase()\r\n    } else {\r\n      switch (value) {\r\n        case 'SC':\r\n          flagSuffix = 'cn'\r\n          break\r\n        case 'KO':\r\n          flagSuffix = 'kr'\r\n          break\r\n        case 'JA':\r\n          flagSuffix = 'jp'\r\n          break\r\n        case 'EN':\r\n          flagSuffix = 'gb'\r\n          break\r\n        case 'BP':\r\n          flagSuffix = 'br'\r\n          break\r\n        case 'ZH':\r\n          flagSuffix = 'cn'\r\n          break\r\n        default:\r\n          return null\r\n      }\r\n    }\r\n    const className = `flag-icon flag-icon-${flagSuffix}`\r\n    return <span className={className} />\r\n  }\r\n\r\n  render() {\r\n    const { value, onSelect, selectedLanguages } = this.props\r\n    const checked =\r\n      selectedLanguages.has(value) ||\r\n      (value === 'All' && selectedLanguages.size === 0)\r\n    return (\r\n      <div\r\n        className={`flex flex-row justify-around rounded-full w-20 mx-3 my-2 px-3 py-1 active:bg-gray-500 hover:bg-gray-400 bg-gray-${\r\n          checked ? '400' : '200'\r\n        }`}\r\n        role=\"button\"\r\n        onClick={() => {\r\n          if (onSelect) onSelect(value)\r\n        }}\r\n      >\r\n        {this.renderIcon()}\r\n        <p className=\"select-none\">{value}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport Flag from './flag'\r\n\r\nexport default class Flags extends Component {\r\n  render() {\r\n    const { onSelect, selectedLanguages } = this.props\r\n    const langs = [\r\n      'JP',\r\n      'FR',\r\n      'RU',\r\n      'PT',\r\n      'SC',\r\n      'ES',\r\n      'KO',\r\n      'IT',\r\n      'JA',\r\n      'DE',\r\n      'EN',\r\n      'BP',\r\n      'ZH',\r\n    ]\r\n    langs.sort()\r\n    langs.unshift('All')\r\n    return (\r\n      <div className=\"flex flex-row flex-wrap w-full justify-start flex-wrap py-2\">\r\n        {langs.map(k => (\r\n          <Flag\r\n            key={k}\r\n            value={k}\r\n            onSelect={onSelect}\r\n            selectedLanguages={selectedLanguages}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withPrefix } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport Flags from '../components/flags'\r\n\r\nconst VAR_PATTERN = /name=\"([^\"]*)\"/\r\nconst TEXT_PATTERN = />(.*)</\r\n\r\nfunction getParameterByName(name, url) {\r\n  if (!url) url = window.location.href\r\n\r\n  name = name.replace(/[[\\]]/g, '\\\\$&')\r\n  let regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)')\r\n  let results = regex.exec(url)\r\n\r\n  if (!results) return null\r\n  if (!results[2]) return ''\r\n\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\r\n}\r\n\r\nexport default class IndexPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      selectedLanguages: new Set(),\r\n      inputText: '',\r\n      results: [],\r\n      variables: [],\r\n      selectedVariable: '',\r\n      showAlert: false,\r\n    }\r\n  }\r\n\r\n  search() {\r\n    const assets = this.assets\r\n    if (!assets) return\r\n    const { inputText } = this.state\r\n    if (inputText === '') {\r\n      this.setState({ variables: [] })\r\n    } else {\r\n      const variables = []\r\n      for (let i = 0; i < assets.length; i += 1) {\r\n        if (assets[i].toLowerCase().includes(inputText.toLowerCase())) {\r\n          let match = VAR_PATTERN.exec(assets[i])\r\n          if (\r\n            match &&\r\n            match[1].length > 0 &&\r\n            variables.indexOf(match[1]) < 0 &&\r\n            match[1].toUpperCase() === match[1]\r\n          ) {\r\n            variables.push(match[1])\r\n          }\r\n        }\r\n      }\r\n      variables.sort(a => a.length)\r\n      this.setState({ variables }, () => this.searchText())\r\n    }\r\n  }\r\n\r\n  searchText() {\r\n    const assets = this.assets\r\n    const { variables, selectedLanguages } = this.state\r\n    let selectedVariable = this.state.selectedVariable || variables[0]\r\n\r\n    let currentLanguage\r\n    let results = []\r\n    if (variables.length === 0) {\r\n      this.setState({ results })\r\n    } else {\r\n      assets.forEach(line => {\r\n        if (line.startsWith('LANGUAGE')) {\r\n          currentLanguage = line.substring(10).trim()\r\n        }\r\n        if (line.includes(`\"${selectedVariable}\"`)) {\r\n          if (\r\n            selectedLanguages.size === 0 ||\r\n            selectedLanguages.has(currentLanguage)\r\n          ) {\r\n            let match = TEXT_PATTERN.exec(line)\r\n            if (match && match[1].length > 0) {\r\n              let text = `\\t${match[1]}\\n\\n`\r\n                .replace(/&quot;/g, '\"')\r\n                .replace(/&lt;/g, '')\r\n              results.push([currentLanguage, text])\r\n            }\r\n          }\r\n        }\r\n      })\r\n      this.setState({ results })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true\r\n    fetch(withPrefix('/trimmedAssets.txt'))\r\n      .then(r => r.text())\r\n      .then(text => {\r\n        this.assets = text.split('\\n')\r\n        const inputText = getParameterByName('search')\r\n        if (inputText) {\r\n          this.setState({ inputText }, () => {\r\n            this.search()\r\n          })\r\n        }\r\n      })\r\n    window.onpopstate = () => {\r\n      if (this._isMounted && window.location.href.includes('search=')) {\r\n        const inputText = window.location.href.split('search=')[1]\r\n        this.setState({ inputText, selectedVariable: '' }, () => {\r\n          this.search()\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  onSelect = value => {\r\n    const { selectedLanguages } = this.state\r\n    if (value === 'All') selectedLanguages.clear()\r\n    else {\r\n      if (selectedLanguages.has(value)) {\r\n        selectedLanguages.delete(value)\r\n      } else {\r\n        selectedLanguages.add(value)\r\n      }\r\n    }\r\n    this.setState({ selectedLanguages }, this.searchText())\r\n  }\r\n\r\n  renderIcon = value => {\r\n    const lowerCaseSuffix = ['JP', 'FR', 'RU', 'PT', 'ES', 'IT', 'DE']\r\n    let flagSuffix\r\n    if (lowerCaseSuffix.indexOf(value) >= 0) {\r\n      flagSuffix = value.toLowerCase()\r\n    } else {\r\n      switch (value) {\r\n        case 'SC':\r\n          flagSuffix = 'cn'\r\n          break\r\n        case 'KO':\r\n          flagSuffix = 'kr'\r\n          break\r\n        case 'JA':\r\n          flagSuffix = 'jp'\r\n          break\r\n        case 'EN':\r\n          flagSuffix = 'gb'\r\n          break\r\n        case 'BP':\r\n          flagSuffix = 'br'\r\n          break\r\n        case 'ZH':\r\n          flagSuffix = 'cn'\r\n          break\r\n        default:\r\n          flagSuffix = 'cn'\r\n      }\r\n    }\r\n    return <span className={`flag-icon flag-icon-${flagSuffix}`} />\r\n  }\r\n\r\n  renderResults = () => {\r\n    const { results, showAlert } = this.state\r\n    const cards = []\r\n    results.sort().forEach(([k, v]) => {\r\n      v = v.trim()\r\n      k = k.trim()\r\n      cards.push(\r\n        <div\r\n          key={k + v}\r\n          className=\"flex-grow sm:w-1/2 md:w-1/3 lg:w-1/4 px-2 py-2\"\r\n        >\r\n          <div className=\"bg-gray-200 rounded px-2 py-2 shadow h-full\">\r\n            <div\r\n              role=\"button\"\r\n              className=\"hover:bg-gray-400 hover:text-black text-gray-200 cursor-pointer px-2 rounded flex flex-row\"\r\n              onClick={() =>\r\n                this.setState({ showAlert: true }, () => {\r\n                  navigator.clipboard.writeText(v)\r\n                  setTimeout(() => this.setState({ showAlert: false }), 1000)\r\n                })\r\n              }\r\n            >\r\n              {this.renderIcon(k)}\r\n              <p className=\"px-1\">{showAlert ? 'Copied!' : 'Copy text'}</p>\r\n            </div>\r\n            <p className=\"px-2 py-2\">{v}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n    return <div className=\"flex flex-row flex-wrap\">{cards}</div>\r\n  }\r\n\r\n  renderSelector = () => {\r\n    const { variables, selectedVariable } = this.state\r\n    let options = []\r\n    variables.forEach(a => {\r\n      options.push(\r\n        <option key={a} value={a}>\r\n          {a}\r\n        </option>\r\n      )\r\n    })\r\n    return (\r\n      <select\r\n        className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-2 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n        value={selectedVariable}\r\n        required\r\n        onChange={event => {\r\n          this.setState({ selectedVariable: event.target.value }, () =>\r\n            this.searchText()\r\n          )\r\n        }}\r\n      >\r\n        {options}\r\n      </select>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { inputText, selectedLanguages } = this.state\r\n    return (\r\n      <Layout>\r\n        <div>\r\n          <form>\r\n            <label\r\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n              htmlFor=\"text\"\r\n            >\r\n              Text to search for\r\n            </label>\r\n            <input\r\n              id=\"search\"\r\n              type=\"text\"\r\n              name=\"search\"\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              value={inputText}\r\n              placeholder=\"Text\"\r\n              onChange={e => this.setState({ inputText: e.target.value })}\r\n            />\r\n          </form>\r\n          <Flags\r\n            onSelect={this.onSelect}\r\n            selectedLanguages={selectedLanguages}\r\n          />\r\n          {this.renderSelector()}\r\n          {this.renderResults()}\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}