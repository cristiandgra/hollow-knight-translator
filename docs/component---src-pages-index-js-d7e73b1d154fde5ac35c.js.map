{"version":3,"sources":["webpack:///./src/components/flag.js","webpack:///./src/components/flags.js","webpack:///./src/pages/index.js"],"names":["Flag","renderIcon","flagSuffix","value","this","props","indexOf","toLowerCase","className","render","onSelect","selectedLanguages","checked","includes","length","role","onClick","Component","Flags","langs","sort","unshift","map","k","key","VAR_PATTERN","TEXT_PATTERN","getParameterByName","name","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","IndexPage","state","splice","push","setState","searchText","renderResults","showAlert","cards","forEach","v","trim","navigator","clipboard","writeText","setTimeout","renderSelector","variables","selectedVariable","options","a","required","onChange","event","target","split","inputText","search","assets","i","match","toUpperCase","currentLanguage","line","startsWith","substring","text","componentDidMount","_isMounted","fetch","withPrefix","then","r","onpopstate","htmlFor","type","join","readOnly","id","placeholder","e"],"mappings":"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","file":"component---src-pages-index-js-d7e73b1d154fde5ac35c.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Flag extends Component {\r\n  renderIcon() {\r\n    const { value } = this.props\r\n    const lowerCaseSuffix = ['JP', 'FR', 'RU', 'PT', 'ES', 'IT', 'DE']\r\n    let flagSuffix\r\n    if (lowerCaseSuffix.indexOf(value) >= 0) {\r\n      flagSuffix = value.toLowerCase()\r\n    } else {\r\n      switch (value) {\r\n        case 'SC':\r\n          flagSuffix = 'cn'\r\n          break\r\n        case 'KO':\r\n          flagSuffix = 'kr'\r\n          break\r\n        case 'JA':\r\n          flagSuffix = 'jp'\r\n          break\r\n        case 'EN':\r\n          flagSuffix = 'gb'\r\n          break\r\n        case 'BP':\r\n          flagSuffix = 'br'\r\n          break\r\n        case 'ZH':\r\n          flagSuffix = 'cn'\r\n          break\r\n        default:\r\n          return null\r\n      }\r\n    }\r\n    const className = `flag-icon flag-icon-${flagSuffix}`\r\n    return <span className={className} />\r\n  }\r\n\r\n  render() {\r\n    const { value, onSelect, selectedLanguages } = this.props\r\n    const checked =\r\n      selectedLanguages.includes(value) ||\r\n      (value === 'All' && selectedLanguages.length === 0)\r\n    return (\r\n      <div\r\n        className={`flex flex-row justify-around rounded-full w-20 mr-4 my-2 px-3 py-1 active:bg-gray-500 hover:bg-gray-400 bg-gray-${\r\n          checked ? '400' : '200'\r\n        }`}\r\n        role=\"button\"\r\n        onClick={() => {\r\n          if (onSelect) onSelect(value)\r\n        }}\r\n      >\r\n        {this.renderIcon()}\r\n        <p className=\"select-none\">{value}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport Flag from './flag'\r\n\r\nexport default class Flags extends Component {\r\n  render() {\r\n    const { onSelect, selectedLanguages } = this.props\r\n    const langs = [\r\n      'JP',\r\n      'FR',\r\n      'RU',\r\n      'PT',\r\n      'SC',\r\n      'ES',\r\n      'KO',\r\n      'IT',\r\n      'JA',\r\n      'DE',\r\n      'EN',\r\n      'BP',\r\n      'ZH',\r\n    ]\r\n    langs.sort()\r\n    langs.unshift('All')\r\n    return (\r\n      <div className=\"flex flex-row flex-wrap w-full justify-start py-2\">\r\n        {langs.map(k => (\r\n          <Flag\r\n            key={k}\r\n            value={k}\r\n            onSelect={onSelect}\r\n            selectedLanguages={selectedLanguages}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withPrefix } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport Flags from '../components/flags'\r\n\r\nconst VAR_PATTERN = /name=\"([^\"]*)\"/\r\nconst TEXT_PATTERN = />(.*)</\r\n\r\nfunction getParameterByName(name, url) {\r\n  if (typeof window !== `undefined`) {\r\n    if (!url) url = window.location.href\r\n\r\n    name = name.replace(/[[\\]]/g, '\\\\$&')\r\n    let regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)')\r\n    let results = regex.exec(url)\r\n\r\n    if (!results) return ''\r\n    if (!results[2]) return ''\r\n\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '))\r\n  }\r\n  return ''\r\n}\r\n\r\nexport default class IndexPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let langs = getParameterByName('langs').split(',')\r\n    if (langs.length === 1 && langs[0] === '') langs = []\r\n    this.state = {\r\n      selectedLanguages: langs,\r\n      inputText: getParameterByName('search'),\r\n      results: [],\r\n      variables: [],\r\n      selectedVariable: '',\r\n      showAlert: false,\r\n    }\r\n  }\r\n\r\n  search() {\r\n    const assets = this.assets\r\n    if (!assets) return\r\n    const { inputText } = this.state\r\n    if (inputText === '') {\r\n      this.setState({ variables: [] })\r\n    } else {\r\n      const variables = []\r\n      for (let i = 0; i < assets.length; i += 1) {\r\n        if (assets[i].toLowerCase().includes(inputText.toLowerCase())) {\r\n          let match = VAR_PATTERN.exec(assets[i])\r\n          if (\r\n            match &&\r\n            match[1].length > 0 &&\r\n            variables.indexOf(match[1]) < 0 &&\r\n            match[1].toUpperCase() === match[1]\r\n          ) {\r\n            variables.push(match[1])\r\n          }\r\n        }\r\n      }\r\n      variables.sort(a => a.length)\r\n      this.setState({ variables }, () => this.searchText())\r\n    }\r\n  }\r\n\r\n  searchText() {\r\n    const assets = this.assets\r\n    const { variables, selectedLanguages } = this.state\r\n    let selectedVariable = this.state.selectedVariable || variables[0]\r\n\r\n    let currentLanguage\r\n    let results = []\r\n    if (variables.length === 0) {\r\n      this.setState({ results })\r\n    } else {\r\n      assets.forEach(line => {\r\n        if (line.startsWith('LANGUAGE')) {\r\n          currentLanguage = line.substring(10).trim()\r\n        }\r\n        if (line.includes(`\"${selectedVariable}\"`)) {\r\n          if (\r\n            selectedLanguages.length === 0 ||\r\n            selectedLanguages.includes(currentLanguage)\r\n          ) {\r\n            let match = TEXT_PATTERN.exec(line)\r\n            if (match && match[1].length > 0) {\r\n              let text = `\\t${match[1]}\\n\\n`\r\n                .replace(/&quot;/g, '\"')\r\n                .replace(/&lt;/g, '')\r\n              results.push([currentLanguage, text])\r\n            }\r\n          }\r\n        }\r\n      })\r\n      this.setState({ results })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true\r\n    fetch(withPrefix('/trimmedAssets.txt'))\r\n      .then(r => r.text())\r\n      .then(text => {\r\n        this.assets = text.split('\\n')\r\n        const inputText = getParameterByName('search')\r\n        let langs = getParameterByName('langs').split(',')\r\n        if (langs.length === 1 && langs[0] === '') langs = []\r\n        if (inputText) {\r\n          this.setState({ inputText, selectedLanguages: langs }, () => {\r\n            this.search()\r\n          })\r\n        }\r\n      })\r\n    window.onpopstate = () => {\r\n      if (this._isMounted && window.location.href.includes('search=')) {\r\n        const inputText = window.location.href.split('search=')[1]\r\n        this.setState({ inputText, selectedVariable: '' }, () => {\r\n          this.search()\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  onSelect = value => {\r\n    let { selectedLanguages } = this.state\r\n    if (value === 'All') selectedLanguages.length = 0\r\n    else {\r\n      if (selectedLanguages.includes(value)) {\r\n        selectedLanguages.splice(selectedLanguages.indexOf(value), 1)\r\n      } else {\r\n        selectedLanguages.push(value)\r\n      }\r\n    }\r\n    this.setState(\r\n      { selectedLanguages: [...selectedLanguages] },\r\n      this.searchText()\r\n    )\r\n  }\r\n\r\n  renderIcon = value => {\r\n    const lowerCaseSuffix = ['JP', 'FR', 'RU', 'PT', 'ES', 'IT', 'DE']\r\n    let flagSuffix\r\n    if (lowerCaseSuffix.indexOf(value) >= 0) {\r\n      flagSuffix = value.toLowerCase()\r\n    } else {\r\n      switch (value) {\r\n        case 'SC':\r\n          flagSuffix = 'cn'\r\n          break\r\n        case 'KO':\r\n          flagSuffix = 'kr'\r\n          break\r\n        case 'JA':\r\n          flagSuffix = 'jp'\r\n          break\r\n        case 'EN':\r\n          flagSuffix = 'gb'\r\n          break\r\n        case 'BP':\r\n          flagSuffix = 'br'\r\n          break\r\n        case 'ZH':\r\n          flagSuffix = 'cn'\r\n          break\r\n        default:\r\n          flagSuffix = 'cn'\r\n      }\r\n    }\r\n    return <span className={`flag-icon flag-icon-${flagSuffix}`} />\r\n  }\r\n\r\n  renderResults = () => {\r\n    const { results, showAlert } = this.state\r\n    const cards = []\r\n    results.sort().forEach(([k, v]) => {\r\n      v = v.trim()\r\n      k = k.trim()\r\n      cards.push(\r\n        <div\r\n          key={k + v}\r\n          className=\"flex-grow sm:w-1/2 md:w-1/3 lg:w-1/4 pr-2 py-2\"\r\n        >\r\n          <div className=\"bg-gray-200 rounded px-2 py-2 shadow h-full\">\r\n            <div\r\n              role=\"button\"\r\n              className=\"hover:bg-gray-400 hover:text-black text-gray-200 cursor-pointer px-2 rounded flex flex-row\"\r\n              onClick={() =>\r\n                this.setState({ showAlert: true }, () => {\r\n                  navigator.clipboard.writeText(v)\r\n                  setTimeout(() => this.setState({ showAlert: false }), 1000)\r\n                })\r\n              }\r\n            >\r\n              {this.renderIcon(k)}\r\n              <p className=\"px-1\">{showAlert ? 'Copied!' : 'Copy text'}</p>\r\n            </div>\r\n            <p className=\"px-2 py-2\">{v}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n    return <div className=\"flex flex-row flex-wrap\">{cards}</div>\r\n  }\r\n\r\n  renderSelector = () => {\r\n    const { variables, selectedVariable } = this.state\r\n    let options = []\r\n    variables.forEach(a => {\r\n      options.push(\r\n        <option key={a} value={a}>\r\n          {a}\r\n        </option>\r\n      )\r\n    })\r\n    return (\r\n      <select\r\n        className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-2 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n        value={selectedVariable}\r\n        required\r\n        onChange={event => {\r\n          this.setState({ selectedVariable: event.target.value }, () =>\r\n            this.searchText()\r\n          )\r\n        }}\r\n      >\r\n        {options}\r\n      </select>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { inputText, selectedLanguages } = this.state\r\n    return (\r\n      <Layout>\r\n        <div>\r\n          <form>\r\n            <label\r\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n              htmlFor=\"text\"\r\n            >\r\n              Text to search for\r\n            </label>\r\n            <input\r\n              className=\"hidden\"\r\n              name=\"langs\"\r\n              type=\"text\"\r\n              value={selectedLanguages.join(',')}\r\n              readOnly\r\n            />\r\n            <input\r\n              id=\"search\"\r\n              type=\"text\"\r\n              name=\"search\"\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              value={inputText}\r\n              placeholder=\"Text\"\r\n              onChange={e => this.setState({ inputText: e.target.value })}\r\n            />\r\n            <input type=\"submit\" className=\"hidden\" />\r\n          </form>\r\n          <Flags\r\n            onSelect={this.onSelect}\r\n            selectedLanguages={selectedLanguages}\r\n          />\r\n          {this.renderSelector()}\r\n          {this.renderResults()}\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}